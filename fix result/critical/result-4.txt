ChangeLog:1@Section.java
FixDescription: Fix the busy-waiting loop and ensure proper synchronization to prevent race conditions.
OriginalCode@20-24:
[20]                 t.turn = 1;
[21]                 System.out.println("In critical section, thread number = " + threadNumber);
[22]                 while(t.turn != 1);
[23]                 System.out.println("Out critical section, thread number = " + threadNumber);
[24]                 t.turn = 0;
FixedCode@20-24:
[20]                 synchronized(t) {
[21]                     t.turn = 1;
[22]                     System.out.println("In critical section, thread number = " + threadNumber);
[23]                     while(t.turn != 1) {
[24]                         try {
[25]                             t.wait();
[26]                         } catch (InterruptedException e) {}
[27]                     }
[28]                     System.out.println("Out critical section, thread number = " + threadNumber);
[29]                     t.turn = 0;
[30]                     t.notifyAll();
[31]                 }

OriginalCode@9-14:
[9]             t.turn = 0;
[10]             System.out.println("In critical section, thread number = " + threadNumber);
[11]             if(t.turn != 0)
[12]                 throw new RuntimeException();
[13]             System.out.println("Out critical section, thread number = " + threadNumber);
[14]             t.turn = 1;
FixedCode@9-15:
[9]             synchronized(t) {
[10]                 t.turn = 0;
[11]                 System.out.println("In critical section, thread number = " + threadNumber);
[12]                 if(t.turn != 0)
[13]                     throw new RuntimeException();
[14]                 System.out.println("Out critical section, thread number = " + threadNumber);
[15]                 t.turn = 1;
[16]                 t.notifyAll();
[17]             }